[answer62]

t_merge = (
          t2.join(t3, t2.name == t3.name, how="left")
          .drop(s.matches(".*_right"))
)

# 別解1
# t_merge = (
#           t2.join(t3, "name", how="left")
#           .drop(s.matches(".*_right"))
# )

# 別解2
# t_merge = (
#             t2.left_join(t3, "name")
#             .drop(s.matches(".*_right"))
# )

t_merge


----------------------------------------------

[Tips]
・左結合では、t2 に存在するレコードに t3 のレコードを結合する
・結合キーを t2.name == t3.name のように name 列を指定
・how=''で結合方法を指定
・結合キーの列名が同一である場合は、別解1のように記述することもできる
　（私の環境の問題かもしれませんが、こちらのほうが処理時間が少し長く感じるときがある）。
・左結合の場合は、別解2のように .left_join() を使うこともできる。
・.drop(s.matches(".*_right")) で結合で新しくできる *_right 列を
　削除できる（必要であれば任意で実行して下さい）。

[Attention!]
・ibis-framework==7.2.0 では Polars での join に限り、結合キー名が異なる2つのテーブルを
　join する場合にエラーが出ることを確認しています。Polars で異なる結合キーで join する場合は、
　 .rename() メソッドを用いて事前に両テーブルの結合キー名が同一になるように列名変更してから
　join して下さい。

----------------------------------------------

[参考] pandas記法

df2 = pd.merge(df2,df3,on='name',how='left')
df2

